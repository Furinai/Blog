/*
 Navicat Premium Data Transfer

 Source Server         : blog_serve
 Source Server Type    : MySQL
 Source Server Version : 50727
 Source Host           : 47.95.11.250:3306
 Source Schema         : blog_citru_cn

 Target Server Type    : MySQL
 Target Server Version : 50727
 File Encoding         : 65001

 Date: 04/10/2019 20:45:39
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  `summary` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci,
  `user_id` int(11) DEFAULT NULL,
  `category_id` int(11) DEFAULT NULL,
  `create_time` datetime(0) DEFAULT NULL,
  `update_time` datetime(0) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 18 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES (1, '俩数之和算法题解', '题目地址 第一种方法：暴力搜索，时间复杂度高 C解法： int *twoSum(int *nums, int numsSize, int target, int *returnSize)\n{\n    for (int i = 0; i < numsSize; i++)\n    {\n        for (int j = i + 1; j < numsSize; j++)\n        {\n            if (nums[i] + nums[j] == target)\n            {\n                int *result = (int *)malloc', '<p><a href=\"https://leetcode-cn.com/problems/two-sum/\" target=\"_blank\" rel=\"noopener\">题目地址</a></p>\n<p style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">第一种方法：暴力搜索，时间复杂度高</p>\n<p style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">C解法：</p>\n<pre class=\"language-c\"><code>int *twoSum(int *nums, int numsSize, int target, int *returnSize)\n{\n    for (int i = 0; i &lt; numsSize; i++)\n    {\n        for (int j = i + 1; j &lt; numsSize; j++)\n        {\n            if (nums[i] + nums[j] == target)\n            {\n                int *result = (int *)malloc(2 * sizeof(int));\n                *returnSize = 2;\n                result[0] = i;\n                result[1] = j;\n                return result;\n            }\n        }\n    }\n    return NULL;\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">C++解法</span></p>\n<pre class=\"language-cpp\"><code>class Solution\n{\npublic:\n    vector&lt;int&gt; twoSum(vector&lt;int&gt; &amp;nums, int target)\n    {\n        unordered_map&lt;int, int&gt; map;\n        for (size_t i = 0; i &lt; nums.size(); i++)\n        {\n            int complement = target - nums[i];\n            if (map.find(complement) != map.end())\n            {\n                int result[] = {map[complement], i};\n                return vector&lt;int&gt;(result, result + 2);\n            }\n            map[nums[i]] = i;\n        }\n        return vector&lt;int&gt;{};\n    }\n};</code></pre>\n<p style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">第二种方法：哈希表，时间复杂度低，但空间复杂度高</p>\n<p style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">JAVA解法</p>\n<pre class=\"language-java\"><code>class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        Map&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;();\n        for (int i = 0; i &lt; nums.length; i++) {\n            int complement = target - nums[i];\n            if (map.containsKey(complement)) {\n                return new int[] { map.get(complement), i };\n            }\n            map.put(nums[i], i);\n        }\n        return new int[] {};\n    }\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">Python3解法</span></p>\n<pre class=\"language-python\"><code>class Solution:\n    def twoSum(self, nums: List[int], target: int) -&gt; List[int]:\n        hashmap = {}\n        for index, value in enumerate(nums):\n            complement = target - value\n            if complement in hashmap:\n                return {hashmap[complement],index}\n            hashmap[value] = index</code></pre>', 1, 32, '2019-09-11 17:39:22', '2019-09-15 17:39:22');
INSERT INTO `article` VALUES (2, '使用多种注解方式装配Bean到spring容器中', '在src目录下创建annotation包 在annotation包下创建dao包 在dao包下创建接口TestDao package annotation.dao;\n\npublic interface TestDao {\n    public void save();\n} 创建实现类TestDaoImpl package annotation.dao;\n\nimport org.springframework.stereotype.Repository;\n\n@Repository(\"testDao\")\npublic class TestDaoImpl implements TestDao {\n ', '<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在src目录下创建annotation包</span><br style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\" /><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在annotation包下创建dao包</span><br style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\" /><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在dao包下创建接口TestDao</span></p>\n<pre class=\"language-java\"><code>package annotation.dao;\n\npublic interface TestDao {\n    public void save();\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">创建实现类TestDaoImpl</span></p>\n<pre class=\"language-java\"><code>package annotation.dao;\n\nimport org.springframework.stereotype.Repository;\n\n@Repository(\"testDao\")\npublic class TestDaoImpl implements TestDao {\n    @Override\n    public void save() {\n        System.out.println(\"test Dao save\");\n    }\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在annotation包下创建service包</span><br style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\" /><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在service包下创建接口TestService</span></p>\n<pre class=\"language-java\"><code>package annotation.service;\n\npublic interface TestService {\n    public void save();\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">创建实现类TestServiceImpl</span></p>\n<pre class=\"language-java\"><code>import annotation.dao.TestDao;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n@Service(\"testService\")\npublic class TestServiceImpl implements TestService {\n    @Autowired\n    private TestDao testDao;\n\n    @Override\n    public void save() {\n        testDao.save();\n        System.out.println(\"test service save\");\n    }\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在annotation包下创建controller包</span><br style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\" /><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在controller包下创建类TestController</span></p>\n<pre class=\"language-java\"><code>package annotation.controller;\n\nimport annotation.service.TestService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\n\n@Controller\npublic class TestController {\n    @Autowired\n    private TestService testService;\n    public void save(){\n        testService.save();\n        System.out.println(\"test controller save\");\n    }\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">创建spring配置文件annotationContext.xml</span></p>\n<pre class=\"language-markup\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\"&gt;\n    &lt;!--配置自动扫描annotation包下的类--&gt;\n    &lt;context:component-scan base-package=\"annotation\"/&gt;\n&lt;/beans&gt;</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在test包下创建TestMoreAnnotation类</span></p>\n<pre class=\"language-java\"><code>package test;\n\nimport annotation.controller.TestController;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\npublic class TestMoreAnnotation {\n    public static void main(String[] args) {\n        ApplicationContext ac=new ClassPathXmlApplicationContext(\"annotationContext.xml\");\n        TestController testController=(TestController) ac.getBean(\"testController\");\n        testController.save();\n\n    }\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">结果</span></p>\n<pre class=\"language-java\"><code>4月 06, 2019 11:49:50 上午 org.springframework.context.support.ClassPathXmlApplicationContext prepareRefresh\n信息: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5a8e6209: startup date [Sat Apr 06 11:49:50 CST 2019]; root of context hierarchy\n4月 06, 2019 11:49:50 上午 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions\n信息: Loading XML bean definitions from class path resource [annotationContext.xml]\ntest Dao save\ntest service save\ntest controller save</code></pre>', 1, 10, '2019-04-06 17:44:04', '2019-09-15 17:44:04');
INSERT INTO `article` VALUES (3, '使用注解方式装配Bean到spring容器中', '在src目录下创建annotation包 在annotation包下创建类AnnotationUser package annotation;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class AnnotationUser {\n    @Value(\"chenheng\")\n    private String uname;\n\n    public String getUname(', '<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在src目录下创建annotation包</span><br style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\" /><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在annotation包下创建类AnnotationUser</span></p>\n<pre class=\"language-java\"><code>package annotation;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.stereotype.Component;\n\n@Component\npublic class AnnotationUser {\n    @Value(\"chenheng\")\n    private String uname;\n\n    public String getUname() {\n        return uname;\n    }\n\n    public void setUname(String uname) {\n        this.uname = uname;\n    }\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">创建spring配置文件annotationContext.xml</span></p>\n<pre class=\"language-markup\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context=\"http://www.springframework.org/schema/context\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\"&gt;\n    &lt;!--配置自动扫描annotation包下的类--&gt;\n    &lt;context:component-scan base-package=\"annotation\"/&gt;\n&lt;/beans&gt;</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在test包下创建TestAnnotation类</span></p>\n<pre class=\"language-java\"><code>package test;\n\nimport annotation.AnnotationUser;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\npublic class TestAnnotation {\n    public static void main(String[] args) {\n        ApplicationContext ac = new ClassPathXmlApplicationContext(\"annotationContext.xml\");\n        AnnotationUser au = (AnnotationUser) ac.getBean(\"annotationUser\");\n        System.out.println(au.getUname());\n    }\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">结果</span></p>\n<pre class=\"language-java\"><code>信息: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5a8e6209: startup date [Sat Apr 06 11:41:21 CST 2019]; root of context hierarchy\n4月 06, 2019 11:41:22 上午 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions\n信息: Loading XML bean definitions from class path resource [annotationContext.xml]\nchenheng</code></pre>', 1, 10, '2019-04-06 17:15:48', '2019-09-22 17:15:48');
INSERT INTO `article` VALUES (4, '使用XML配置装配Bean到spring容器中', '在src目录下创建assemble包 在assemble包下创建类ComplexUser package assemble;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\n\npublic class ComplexUser {\n    private String uname;\n    private List<String> hobbyList;\n    private Map<String, String> residenceMap;\n    private Set<String> aliasSet;', '<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在src目录下创建assemble包</span><br style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\" /><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在assemble包下创建类ComplexUser</span></p>\n<pre class=\"language-java\"><code>package assemble;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Set;\n\npublic class ComplexUser {\n    private String uname;\n    private List&lt;String&gt; hobbyList;\n    private Map&lt;String, String&gt; residenceMap;\n    private Set&lt;String&gt; aliasSet;\n    private String[] array;\n\n    /*\n     * 使用构造方法注入，需要提供带参数的构造方法\n     */\n    public ComplexUser(String uname, List&lt;String&gt; hobbyList, Map&lt;String, String&gt; residenceMap, Set&lt;String&gt; aliasSet, String[] array) {\n        super();\n        this.uname = uname;\n        this.hobbyList = hobbyList;\n        this.residenceMap = residenceMap;\n        this.aliasSet = aliasSet;\n        this.array = array;\n    }\n\n    /**\n     * 使用setter方法注入，提供默认无参数的构造方法，并为注入的属性提供setter方法\n     */\n    public ComplexUser() {\n        super();\n    }\n\n    public void setUname(String uname) {\n        this.uname = uname;\n    }\n\n    public void setHobbyList(List&lt;String&gt; hobbyList) {\n        this.hobbyList = hobbyList;\n    }\n\n    public void setResidenceMap(Map&lt;String, String&gt; residenceMap) {\n        this.residenceMap = residenceMap;\n    }\n\n    public void setAliasSet(Set&lt;String&gt; aliasSet) {\n        this.aliasSet = aliasSet;\n    }\n\n    public void setArray(String[] array) {\n        this.array = array;\n    }\n\n    @Override\n    public String toString() {\n        return \"uname=\" + uname + \";hobbyList=\" + hobbyList + \";residenceMap=\" + residenceMap + \";aliasSet=\" + aliasSet + \";array=\" + array;\n    }\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">创建spring配置文件applicationContext.xml</span></p>\n<pre class=\"language-markup\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"&gt;\n\n    &lt;!-- 使用构造方法注入方式装配 ComplexUser实例user1 --&gt;\n    &lt;bean id=\"user1\" class=\"assemble.ComplexUser\"&gt;\n        &lt;constructor-arg index=\"0\" value=\"chenheng1\"/&gt;\n        &lt;constructor-arg index=\"1\"&gt;\n            &lt;list&gt;\n                &lt;value&gt;唱歌&lt;/value&gt;\n                &lt;value&gt;跳舞&lt;/value&gt;\n            &lt;/list&gt;\n        &lt;/constructor-arg&gt;\n        &lt;constructor-arg index=\"2\"&gt;\n            &lt;map&gt;\n                &lt;entry key=\"dalian\" value=\"大连\"/&gt;\n                &lt;entry key=\"beijing\" value=\"北京\"/&gt;\n            &lt;/map&gt;\n        &lt;/constructor-arg&gt;\n        &lt;constructor-arg index=\"3\"&gt;\n            &lt;set&gt;\n                &lt;value&gt;陈恒100&lt;/value&gt;\n                &lt;value&gt;陈恒101&lt;/value&gt;\n            &lt;/set&gt;\n        &lt;/constructor-arg&gt;\n        &lt;constructor-arg index=\"4\"&gt;\n            &lt;array&gt;\n                &lt;value&gt;aaaaa&lt;/value&gt;\n                &lt;value&gt;bbbbb&lt;/value&gt;\n            &lt;/array&gt;\n        &lt;/constructor-arg&gt;\n    &lt;/bean&gt;\n\n    &lt;!-- 使用setter方法注入方式装配 ComplexUser实例user2 --&gt;\n    &lt;bean id=\"user2\" class=\"assemble.ComplexUser\"&gt;\n        &lt;property name=\"uname\" value=\"chenheng2\"/&gt;\n        &lt;property name=\"hobbyList\"&gt;\n            &lt;list&gt;\n                &lt;value&gt;看书&lt;/value&gt;\n                &lt;value&gt;学习Spring&lt;/value&gt;\n            &lt;/list&gt;\n        &lt;/property&gt;\n        &lt;property name=\"residenceMap\"&gt;\n            &lt;map&gt;\n                &lt;entry key=\"shenzhen\" value=\"深圳\"/&gt;\n                &lt;entry key=\"gaungzhou\" value=\"广州\"/&gt;\n            &lt;/map&gt;\n        &lt;/property&gt;\n        &lt;property name=\"aliasSet\"&gt;\n            &lt;set&gt;\n                &lt;value&gt;陈恒103&lt;/value&gt;\n                &lt;value&gt;陈恒104&lt;/value&gt;\n            &lt;/set&gt;\n        &lt;/property&gt;\n        &lt;property name=\"array\"&gt;\n            &lt;array&gt;\n                &lt;value&gt;cccccc&lt;/value&gt;\n                &lt;value&gt;dddddd&lt;/value&gt;\n            &lt;/array&gt;\n        &lt;/property&gt;\n    &lt;/bean&gt;\n&lt;/beans&gt;</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在test包下创建TestAssemble类</span></p>\n<pre class=\"language-java\"><code>package test;\n\nimport assemble.ComplexUser;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\npublic class TestAssemble {\n    public static void main(String[] args) {\n        ApplicationContext appCon = new ClassPathXmlApplicationContext(\"applicationContext.xml\");\n        //构造方法装配测试\n        ComplexUser u1 = (ComplexUser) appCon.getBean(\"user1\");\n        System.out.println(u1);\n        //setter方法装配测试\n        ComplexUser u2 = (ComplexUser) appCon.getBean(\"user2\");\n        System.out.println(u2);\n    }\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">结果</span></p>\n<pre class=\"language-java\"><code>4月 06, 2019 11:33:10 上午 org.springframework.context.support.ClassPathXmlApplicationContext prepareRefresh\n信息: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5a8e6209: startup date [Sat Apr 06 11:33:10 CST 2019]; root of context hierarchy\n4月 06, 2019 11:33:10 上午 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions\n信息: Loading XML bean definitions from class path resource [applicationContext.xml]\nuname=chenheng1;hobbyList=[唱歌, 跳舞];residenceMap={dalian=大连, beijing=北京};aliasSet=[陈恒100, 陈恒101];array=[Ljava.lang.String;@2794eab6\nuname=chenheng2;hobbyList=[看书, 学习Spring];residenceMap={shenzhen=深圳, gaungzhou=广州};aliasSet=[陈恒103, 陈恒104];array=[Ljava.lang.String;@6340e5f0</code></pre>', 1, 10, '2019-04-26 17:18:57', '2019-09-22 17:18:57');
INSERT INTO `article` VALUES (5, 'Spring依赖注入之使用Setter方法注入', '在src目录下创建dao包 在dao包下创建接口TestDIDao package dao;\n\npublic interface TestDIDao {\n    public void sayHello();\n} 创建实现类TestDIDaoImpl package dao;\n\npublic class TestDIDaoImpl implements TestDIDao {\n    @Override\n    public void sayHello(){\n        System.out.println(\"TestDI\");\n    }\n} 在src目录下创建service包 在ser', '<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在src目录下创建dao包</span><br style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\" /><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在dao包下创建接口TestDIDao</span></p>\n<pre class=\"language-java\"><code>package dao;\n\npublic interface TestDIDao {\n    public void sayHello();\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">创建实现类TestDIDaoImpl</span></p>\n<pre class=\"language-java\"><code>package dao;\n\npublic class TestDIDaoImpl implements TestDIDao {\n    @Override\n    public void sayHello(){\n        System.out.println(\"TestDI\");\n    }\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在src目录下创建service包</span><br style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\" /><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在service包下创建接口TestDIService</span></p>\n<pre class=\"language-java\"><code>package service;\n\npublic interface TestDIService {\n    public void sayHello();\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">创建实现类TestDIServiceImpl</span></p>\n<pre class=\"language-java\"><code>package service;\n\nimport dao.TestDIDao;\n\npublic class TestDIServiceImpl implements TestDIService {\n    private TestDIDao testDIDao;\n\n    public void setTestDIDao(TestDIDao testDIDao) {\n        this.testDIDao = testDIDao;\n    }\n\n    @Override\n    public void sayHello() {\n        testDIDao.sayHello();\n        System.out.println(\"构造方法注入\");\n    }\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">创建spring配置文件applicationContext.xml</span></p>\n<pre class=\"language-markup\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"&gt;\n    &lt;bean id=\"testDIDao\" class=\"dao.TestDIDaoImpl\"/&gt;\n    &lt;bean id=\"testDIService\" class=\"service.TestDIServiceImpl\"&gt;\n        &lt;property name=\"testDIDao\" ref=\"testDIDao\"/&gt;\n    &lt;/bean&gt;\n&lt;/beans&gt;</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在test包下创建TestDI类</span></p>\n<pre class=\"language-java\"><code>package test;\n\nimport service.TestDIService;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\npublic class TestDI {\n    public static void main(String[] args) {\n        ApplicationContext ac = new ClassPathXmlApplicationContext(\"applicationContext.xml\");\n        TestDIService testDIService= (TestDIService) ac.getBean(\"testDIService\");\n        testDIService.sayHello();\n    }\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">结果</span></p>\n<pre class=\"language-java\"><code>4月 06, 2019 11:01:38 上午 org.springframework.context.support.ClassPathXmlApplicationContext prepareRefresh\n信息: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4b4523f8: startup date [Sat Apr 06 11:01:38 CST 2019]; root of context hierarchy\n4月 06, 2019 11:01:38 上午 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions\n信息: Loading XML bean definitions from class path resource [applicationContext.xml]\nTestDI\n构造方法注入</code></pre>', 1, 10, '2019-04-06 18:00:01', '2019-09-28 18:00:01');
INSERT INTO `article` VALUES (6, 'Spring依赖注入之构造方法注入', '在src目录下创建dao包 在dao包下创建接口TestDIDao \npackage dao;\n\npublic interface TestDIDao {\n    public void sayHello();\n}\n 创建实现类TestDIDaoImpl \npackage dao;\n\npublic class TestDIDaoImpl implements TestDIDao {\n    @Override\n    public void sayHello(){\n        System.out.println(\"TestDI\");\n    }\n}\n 在src目录下创建service包 ', '<p>在src目录下创建dao包<br />在dao包下创建接口TestDIDao</p>\n<pre class=\"language-java\"><code>\npackage dao;\n\npublic interface TestDIDao {\n    public void sayHello();\n}\n</code></pre>\n<p>创建实现类TestDIDaoImpl</p>\n<pre class=\"language-java\"><code>\npackage dao;\n\npublic class TestDIDaoImpl implements TestDIDao {\n    @Override\n    public void sayHello(){\n        System.out.println(\"TestDI\");\n    }\n}\n</code></pre>\n<p>在src目录下创建service包<br />在service包下创建接口TestDIService</p>\n<pre class=\"language-java\"><code>\npackage service;\n\npublic interface TestDIService {\n    public void sayHello();\n}\n</code></pre>\n<p>创建实现类TestDIServiceImpl</p>\n<pre class=\"language-java\"><code>\npackage service;\n\nimport dao.TestDIDao;\n\npublic class TestDIServiceImpl implements TestDIService {\n    private TestDIDao testDIDao;\n\n      public TestDIServiceImpl(TestDIDao testDIDao) {\n          super();\n          this.testDIDao = testDIDao;\n      }\n\n    @Override\n    public void sayHello() {\n        testDIDao.sayHello();\n        System.out.println(\"构造方法注入\");\n    }\n}\n</code></pre>\n<p>创建spring配置文件applicationContext.xml</p>\n<pre class=\"language-markup\"><code>\n&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"&gt;\n    &lt;bean id=\"testDIDao\" class=\"dao.TestDIDaoImpl\"/&gt;\n    &lt;bean id=\"testDIService\" class=\"service.TestDIServiceImpl\"&gt;\n        &lt;constructor-arg index=\"0\" ref=\"testDiDao\"/&gt;\n    &lt;/bean&gt;\n&lt;/beans&gt;</code></pre>\n<p>在test包下创建TestDI类</p>\n<pre class=\"language-java\"><code>\npackage test;\n\nimport service.TestDIService;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\npublic class TestDI {\n    public static void main(String[] args) {\n        ApplicationContext ac = new ClassPathXmlApplicationContext(\"applicationContext.xml\");\n        TestDIService testDIService= (TestDIService) ac.getBean(\"testDIService\");\n        testDIService.sayHello();\n    }\n}\n</code></pre>\n<p>结果</p>\n<pre class=\"language-java\"><code>\n4月 06, 2019 11:01:38 上午 org.springframework.context.support.ClassPathXmlApplicationContext prepareRefresh\n信息: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4b4523f8: startup date [Sat Apr 06 11:01:38 CST 2019]; root of context hierarchy\n4月 06, 2019 11:01:38 上午 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions\n信息: Loading XML bean definitions from class path resource [applicationContext.xml]\nTestDI\n构造方法注入\n</code></pre>', 1, 10, '2019-04-06 18:14:57', '2019-09-28 18:14:57');
INSERT INTO `article` VALUES (7, '通过Spring容器获取实现类对象', '在src目录下创建dao包 在dao包下创建接口TestDao package dao;\n\npublic interface TestDao {\n    public void sayHello();\n} 创建实现类TestDaoImpl package dao;\n\npublic class TestDaoImpl implements TestDao {\n    @Override\n    public void sayHello(){\n        System.out.println(\"Test1\");\n    }\n} 创建spring配置文件applicationContext.xm', '<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在src目录下创建dao包</span><br style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\" /><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在dao包下创建接口TestDao</span></p>\n<pre class=\"language-java\"><code>package dao;\n\npublic interface TestDao {\n    public void sayHello();\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">创建实现类TestDaoImpl</span></p>\n<pre class=\"language-java\"><code>package dao;\n\npublic class TestDaoImpl implements TestDao {\n    @Override\n    public void sayHello(){\n        System.out.println(\"Test1\");\n    }\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">创建spring配置文件applicationContext.xml</span></p>\n<pre class=\"language-markup\"><code>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;beans xmlns=\"http://www.springframework.org/schema/beans\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"&gt;\n    &lt;bean id=\"testDao\" class=\"dao.TestDaoImpl\"/&gt;\n&lt;/beans&gt;</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在test包下创建Test类</span></p>\n<pre class=\"language-java\"><code>package test;\n\nimport dao.TestDao;\nimport org.springframework.context.ApplicationContext;\nimport org.springframework.context.support.ClassPathXmlApplicationContext;\n\npublic class Test {\n    public static void main(String[] args) {\n        ApplicationContext ac = new ClassPathXmlApplicationContext(\"applicationContext.xml\");\n        TestDao testDao = (TestDao) ac.getBean(\"testDao\");\n        testDao.sayHello();\n    }\n}</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">结果</span></p>\n<pre class=\"language-java\"><code>4月 06, 2019 10:48:25 上午 org.springframework.context.support.ClassPathXmlApplicationContext prepareRefresh\n信息: Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@3dd4520b: startup date [Sat Apr 06 10:48:25 CST 2019]; root of context hierarchy\n4月 06, 2019 10:48:25 上午 org.springframework.beans.factory.xml.XmlBeanDefinitionReader loadBeanDefinitions\n信息: Loading XML bean definitions from class path resource [ApplicationContext.xml]\nTest1</code></pre>', 1, 10, '2019-04-06 18:17:20', '2019-09-28 18:17:20');
INSERT INTO `article` VALUES (8, 'Xiuno新消息弹窗提示或跳转消息页面简单代码', '提示 <script> \n$(function() {\n    if ($(\"#nav-usernotice\").hasClass(\"current\")) {\n        alert(\"您有新的消息!\");\n    }\n}); \n</script> 跳转 <script> \n$(function() {\n    if ($(\"#nav-usernotice\").hasClass(\"current\")) {\n        window.location.href = \"<?php echo url(\"my - notice \");?>\";\n    }\n}); \n</script> 俩种方式', '<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">提示</span></p>\n<pre class=\"language-javascript\"><code>&lt;script&gt; \n$(function() {\n    if ($(\"#nav-usernotice\").hasClass(\"current\")) {\n        alert(\"您有新的消息!\");\n    }\n}); \n&lt;/script&gt;</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">跳转</span></p>\n<pre class=\"language-javascript\"><code>&lt;script&gt; \n$(function() {\n    if ($(\"#nav-usernotice\").hasClass(\"current\")) {\n        window.location.href = \"&lt;?php echo url(\"my - notice \");?&gt;\";\n    }\n}); \n&lt;/script&gt;</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">俩种方式选一个即可，代码简单，缺点也多，只要有未读消息，每次访问首页都会提示一次或者跳转到消息页面，全部标记已读就不会了</span></p>', 1, 5, '2018-07-15 18:21:16', '2019-09-28 18:21:16');
INSERT INTO `article` VALUES (9, 'Xiuno程序帖子列表获取第一张缩略图方法', '在 thread_list.inc.htm 任意地方放入以下代码 <?php\n$post=post_read_cache($_thread[\'firstpid\']);\n$content=$post[\'message_fmt\'];\nif(preg_match_all(\"/<img.*\\>/isU\",$content,$ereg)){\npreg_match_all(\"#src=(\'|\\\")(.*)(\'|\\\")#isU\",$ereg[0][0],$imgs);\n$img=$imgs[2][0];\n?> 然后在合适的地方用以下代码调用 <?php echo $img;?>', '<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">在 thread_list.inc.htm 任意地方放入以下代码</span></p>\n<pre class=\"language-php\"><code>&lt;?php\n$post=post_read_cache($_thread[\'firstpid\']);\n$content=$post[\'message_fmt\'];\nif(preg_match_all(\"/&lt;img.*\\&gt;/isU\",$content,$ereg)){\npreg_match_all(\"#src=(\'|\\\")(.*)(\'|\\\")#isU\",$ereg[0][0],$imgs);\n$img=$imgs[2][0];\n?&gt;</code></pre>\n<p><span style=\"color: #444444; font-family: -apple-system, BlinkMacSystemFont, \'Helvetica Neue\', \'PingFang SC\', \'Microsoft YaHei\', \'Source Han Sans SC\', \'Noto Sans CJK SC\', \'WenQuanYi Micro Hei\', sans-serif; font-size: 14px; background-color: #ffffff;\">然后在合适的地方用以下代码调用</span></p>\n<pre class=\"language-php\"><code>&lt;?php echo $img;?&gt;</code></pre>', 1, 5, '2018-07-30 18:22:25', '2019-09-28 18:22:25');
INSERT INTO `article` VALUES (10, 'Xiuno优化每日一句插件加载速度', '每日一句数据来源于金山词霸，每日仅更新一次， 但是每访问一次都会重复获取一次，显然会对页面加载时间有影响， 解决方法就是每天获取一次保存下来就不用重复获取了 在hook目录新建文件 model_cron_daily_end.php，写入以下内容 $date=date(\'Y-M-D\');\n$json=file_get_contents(\'http://open.iciba.com/dsapi/?date=\'.$date);\n$content=json_decode($json,true);\n$kv = array();\n     \n$kv[\'content\']=$content[\'content', '<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">每日一句数据来源于金山词霸，每日仅更新一次，</p>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">但是每访问一次都会重复获取一次，显然会对页面加载时间有影响，</p>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">解决方法就是每天获取一次保存下来就不用重复获取了</p>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">在hook目录新建文件 model_cron_daily_end.php，写入以下内容</p>\n<pre class=\"language-php\"><code>$date=date(\'Y-M-D\');\n$json=file_get_contents(\'http://open.iciba.com/dsapi/?date=\'.$date);\n$content=json_decode($json,true);\n$kv = array();\n     \n$kv[\'content\']=$content[\'content\'];\n$kv[\'note\']=$content[\'note\'];\nkv_set(\'sentence\',$kv);</code></pre>\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">修改 index_start.htm 为以下内容</span></p>\n<pre class=\"language-php\"><code>&lt;?php\n$TXT=kv_get(\'sentence\');\n?&gt;\n&lt;div class=\"card-header\"&gt;\n&lt;span class=\"table table-hover threadlist\"&gt;每日一句：&lt;?php echo $sentence[\'content\'];?&gt;&lt;/span&gt;\n&lt;span class=\"table table-hover threadlist\"&gt;&lt;?php echo $sentence[\'note\'];?&gt;&lt;/span&gt;\n&lt;/div&gt;</code></pre>\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">每日0时更新一次，其余时间都是从数据库读取，这样就快了很多</span></p>', 1, 5, '2018-06-16 21:38:39', '2019-09-28 19:38:39');
INSERT INTO `article` VALUES (11, 'Xiuno修改帖子精华、置顶等图标方法', '精华图标在plugin/xn_digest/hook/header_link_afert.htm中的css中 .icon-digest-1:before{} .icon-digest-2:before{} .icon-digest-3:before{} 分别为一二三级精华图标，修改为 .icon-digest-3:before { font-size:12px;content: \"精帖\"; color: #D53D38;padding:1px;border:1px solid #D53D38}', '<p>精华图标在plugin/xn_digest/hook/header_link_afert.htm中的css中</p>\n<p>.icon-digest-1:before{}</p>\n<p>.icon-digest-2:before{}</p>\n<p>.icon-digest-3:before{}</p>\n<p>分别为一二三级精华图标，修改为</p>\n<pre class=\"language-css\"><code>.icon-digest-3:before { font-size:12px;content: \"精帖\"; color: #D53D38;padding:1px;border:1px solid #D53D38}</code></pre><p>置顶图标bootstrap.css搜索.icon-top</p>\n', 1, 5, '2018-07-05 23:40:54', '2019-09-28 19:40:54');
INSERT INTO `article` VALUES (12, 'Xiuno程序标签插件限制发帖选择标签数量', '先修改plugin/xn_tag/hook/thread_create_thread_before.php为 <?php exit;\n		// todo:\n		\n		$tagids = param(\'tagid\', array(0));\n		\n		$tagcatemap = $forum[\'tagcatemap\'];\n		foreach($forum[\'tagcatemap\'] as $cate) {\n			$defaulttagid = $cate[\'defaulttagid\'];\n			$isforce = $cate[\'isforce\'];\n			$catetags = array_ke', '<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">先修改plugin/xn_tag/hook/thread_create_thread_before.php为</span></p>\n<pre class=\"language-php\"><code>&lt;?php exit;\n		// todo:\n		\n		$tagids = param(\'tagid\', array(0));\n		\n		$tagcatemap = $forum[\'tagcatemap\'];\n		foreach($forum[\'tagcatemap\'] as $cate) {\n			$defaulttagid = $cate[\'defaulttagid\'];\n			$isforce = $cate[\'isforce\'];\n			$catetags = array_keys($cate[\'tagmap\']);\n			$intersect = array_intersect($catetags, $tagids); // 比较数组交集\n			// 判断是否强制\n			if($isforce) {\n				if(empty($intersect)) {\n					message(-1, \'请选择\'.$cate[\'name\']);\n				}\n			}\n                      if(count($intersect)&gt;1) {\n				message(-1,$cate[\'name\'].\'只能选一个\');\n			}\n			\n		}\n		\n?&gt;</code></pre>\n<p><span style=\"background-color: #ffffff; font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px;\">然后修改</span><span style=\"background-color: #ffffff; font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px;\">plugin</span><span style=\"background-color: #ffffff; font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px;\">/xn_tag/hook/</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">thread_create_thread_end</span><span style=\"background-color: #ffffff; font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px;\">.php</span><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">为</span></p>\n<pre class=\"language-php\"><code>&lt;?php exit;\n		// todo:\n		/*\n		$tag_cate_id_arr = param(\'tag_cate_id\', array(0));\n		foreach($tag_cate_id_arr as $tag_cate_id =&gt; $tagid) {\n			tag_thread_create($tagid, $tid);\n		}\n		*/\n		\n		$tagids = param(\'tagid\', array(0));\n		\n		$tagcatemap = $forum[\'tagcatemap\'];\n		foreach($forum[\'tagcatemap\'] as $cate) {\n			$defaulttagid = $cate[\'defaulttagid\'];\n			$isforce = $cate[\'isforce\'];\n			$catetags = array_keys($cate[\'tagmap\']);\n			$intersect = array_intersect($catetags, $tagids); // 比较数组交集\n			// 判断是否强制\n			if($isforce) {\n				if(empty($intersect)) {\n					message(-1, \'请选择标签\'.$cate[\'name\']);\n				}\n			}\n			\n			if(count($intersect)&gt;1) {\n				message(-1,$cate[\'name\'].\'只能选一个\');\n			}\n			\n			// 判断是否默认\n			if($defaulttagid) {\n				if(empty($intersect)) {\n					array_push($tagids, $defaulttagid);\n				}\n			}\n		}\n		\n		foreach($tagids as $tagid) {\n			$tagid AND tag_thread_create($tagid, $tid);\n		}\n		\n?&gt;</code></pre>', 1, 5, '2018-06-04 14:25:44', '2019-10-04 17:25:44');
INSERT INTO `article` VALUES (13, 'Xiuno程序Umeditor添加简单的新按钮', '首先在umeditor-bbs.css添加按钮图标 .edui-btn-toolbar .edui-btn .edui-icon-inserthide {\n    background-position: -80px -20px;\n} 然后在umeditor.config.js把按钮添加到工具栏上 最后实现按钮功能，可以放到umeditor-insertcode.js文件末尾 UM.registerUI(\'inserthide\', function( name ) {\n    var me = this;\n    var $btn = $.eduibutton({\n        icon :', '<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">首先在umeditor-bbs.css添加按钮图标</span></p>\n<pre class=\"language-css\"><code>.edui-btn-toolbar .edui-btn .edui-icon-inserthide {\n    background-position: -80px -20px;\n}</code></pre>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">然后在umeditor.config.js把按钮添加到工具栏上</p>\n<p><img src=\"/image/7ZKC7TFYRN.jpg\" alt=\"\" width=\"1200\" height=\"158\" /></p>\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">最后实现按钮功能，可以放到umeditor-insertcode.js文件末尾</span></p>\n<pre class=\"language-javascript\"><code>UM.registerUI(\'inserthide\', function( name ) {\n    var me = this;\n    var $btn = $.eduibutton({\n        icon : name,  //图标修改 .edui-btn-toolbar .edui-btn .edui-icon-inserthide{}\n        click : function(){me.execCommand(name);},\n        title: \'插入隐藏内容\' //鼠标在图标悬浮时提示\n    });\n    return $btn;\n});\nUM.plugins[\'inserthide\'] = function() {\n    var me = this;\n    me.commands[\'inserthide\'] = {\n    execCommand : function(  ) {\n            me.execCommand(\'inserthtml\',\'[hide]隐藏内容[/hide]\',true);\n        }\n    };\n};</code></pre>\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">效果：</span></p>\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\"><img src=\"/image/NDZS7N7SN.jpg\" alt=\"\" width=\"1122\" height=\"289\" /></span></p>', 1, 9, '2019-10-04 17:37:52', '2019-10-04 17:37:52');
INSERT INTO `article` VALUES (14, 'Xiuno修改Umeditor工具栏', '1.大屏幕下工具栏： 打开文件 plugin\\xn_umeditor\\umeditor\\umeditor.config.js 145行处和155行处，上边的是编辑器支持的功能，下边是显示出来的功能，添加功能只需把上边的某一项复制到下边，具体每一项是什么作用 百度“Umeditor”看官网文档 2.小屏幕下工具栏 打开文件 plugin\\xn_umeditor\\umeditor\\umeditor.bbs.js 151行括号里 .edui-btn-xnimg中的xnimg指的是上传图片功能，而其它的都被隐藏了，所以只要加到括号里的项小屏幕下不会被隐藏 152行作用和151行相反，加到括号里的是隐藏', '<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">1.大屏幕下工具栏：</span></p>\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">打开文件 plugin\\xn_umeditor\\umeditor\\umeditor.config.js</span></p>\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\"><img src=\"/image/SNWC3KXJPX.jpg\" alt=\"\" width=\"1200\" height=\"362\" /></span></p>\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">145行处和155行处，上边的是编辑器支持的功能，下边是显示出来的功能，添加功能只需把上边的某一项复制到下边，具体每一项是什么作用 百度&ldquo;Umeditor&rdquo;看官网文档</span></p>\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">2.小屏幕下工具栏</span></p>\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">打开文件 plugin\\xn_umeditor\\umeditor\\umeditor.bbs.js</span></p>\n<p><span style=\"font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\"><img src=\"/image/D6WJ8DZ3.jpg\" alt=\"\" width=\"1167\" height=\"147\" /></span></p>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">151行括号里 .edui-btn-xnimg中的xnimg指的是上传图片功能，而其它的都被隐藏了，所以只要加到括号里的项小屏幕下不会被隐藏</p>\n<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; font-family: -apple-system, BlinkMacSystemFont, \'Segoe UI\', Roboto, \'Helvetica Neue\', Arial, sans-serif, \'Apple Color Emoji\', \'Segoe UI Emoji\', \'Segoe UI Symbol\'; font-size: 16px; background-color: #ffffff;\">152行作用和151行相反，加到括号里的是隐藏的，不在括号中的是要显示的，此行默认是注释掉的，如需使用把//放到上一行，改为把151注释就可以了</p>\n<p>&nbsp;</p>', 1, 9, '2018-07-25 17:43:44', '2019-10-04 17:43:44');
INSERT INTO `article` VALUES (15, 'Xiuno程序全部版块列表页面', '首先添加路由，在插件hook目录新建文件index_route_case_start.php，内容为 case \'bbs\': include _include(\'plugin/xxx/view/htm/bbs.htm\'); break; 其中xxx修改为所在插件目录 然后在/plugin/xxx/view/htm新建bbs.htm，内容为 <?php include _include(APP_PATH . \'view/htm/header.inc.htm\'); ?>\n\n<div class=\"row\">\n    <div class=\"col-lg-9 main\">\n\n        <!--', '<p>首先添加路由，在插件hook目录新建文件index_route_case_start.php，内容为</p>\n<pre class=\"language-php\"><code>case \'bbs\': include _include(\'plugin/xxx/view/htm/bbs.htm\'); break;</code></pre>\n<p>其中xxx修改为所在插件目录</p>\n<p>然后在/plugin/xxx/view/htm新建bbs.htm，内容为</p>\n<pre class=\"language-markup\"><code>&lt;?php include _include(APP_PATH . \'view/htm/header.inc.htm\'); ?&gt;\n\n&lt;div class=\"row\"&gt;\n    &lt;div class=\"col-lg-9 main\"&gt;\n\n        &lt;!--{hook bbs_start.htm}--&gt;\n\n        &lt;ul class=\"list-unstyled mb-0\"&gt;\n            &lt;div class=\"row mx-0\"&gt;\n                &lt;?php foreach ($forumlist_show as $_forum) { ?&gt;\n                &lt;li class=\"col-sm-6 px-0 px-sm-2\" fid=\"&lt;?php echo $_forum[\'fid\']; ?&gt;\" data-active=\"fid-&lt;?php echo $_forum[\'fid\']; ?&gt;\"&gt;\n                    &lt;div class=\"card mb-2\"&gt;\n                        &lt;div class=\"card-body\"&gt;\n                            &lt;div class=\"media\"&gt;\n                                &lt;img class=\"logo-4 mr-2\" src=\"&lt;?php echo $_forum[\'icon_url\']; ?&gt;\"&gt;\n                                &lt;div class=\"media-body\"&gt;\n                                    &lt;div class=\"d-flex justify-content-between\"&gt;\n                                        &lt;div&gt;\n                                            &lt;a href=\"&lt;?php echo url(\"forum-$_forum[fid]\"); ?&gt;\"&gt;\n                                                &lt;?php echo \'\' . $_forum[\'name\'] . \'\'; ?&gt;\n                                            &lt;/a&gt;\n                                        &lt;/div&gt;\n                                    &lt;/div&gt;\n                                    &lt;div class=\"text-small\"&gt;\n                                        &lt;?php echo \"全部\" . lang(\'threads\') . \'：\'; ?&gt;\n                                        &lt;?php echo $_forum[\'threads\']; ?&gt; &amp;nbsp;&amp;nbsp;/&amp;nbsp;&amp;nbsp;\n                                        &lt;?php echo \"今日\" . lang(\'posts\') . \'：\'; ?&gt;\n                                        &lt;?php echo $_forum[\'todayposts\']; ?&gt;\n                                    &lt;/div&gt;\n                                    &lt;div class=\"text-small break-all\"&gt;\n                                        &lt;?php echo xn_substr($_forum[\'brief\'], 0, 18); ?&gt;\n                                    &lt;/div&gt;\n                                &lt;/div&gt;\n                            &lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/div&gt;\n                &lt;/li&gt;\n                &lt;?php \n            } ?&gt;\n            &lt;/div&gt;\n        &lt;/ul&gt;\n        \n    &lt;/div&gt;\n\n\n\n    &lt;!--{hook bbs_end.htm}--&gt;\n    &lt;div class=\"col-lg-3 d-none d-lg-block aside pl-0\"&gt;\n        &lt;a role=\"button\" class=\"btn btn-primary btn-block mb-3\" href=\"&lt;?php echo url(\'thread-create-\' . $fid); ?&gt;\"&gt;\n            &lt;?php echo lang(\'thread_create_new\'); ?&gt;\n        &lt;/a&gt;\n        &lt;!--{hook index_site_brief_before.htm}--&gt;\n        &lt;div class=\"card card-site-info\"&gt;\n            &lt;!--{hook index_site_brief_start.htm}--&gt;\n            &lt;div class=\"m-3\"&gt;\n                &lt;h5 class=\"text-center\"&gt;\n                    &lt;?php echo $conf[\'sitename\']; ?&gt;\n                &lt;/h5&gt;\n                &lt;div class=\"small line-height-4\"&gt;\n                    &lt;?php echo $conf[\'sitebrief\']; ?&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=\"card-footer bg-transparent p-2\"&gt;\n                &lt;table class=\"w-100 small\"&gt;\n                    &lt;tr align=\"center\"&gt;\n                        &lt;td&gt;\n                            &lt;span class=\"text-muted\"&gt;\n                                &lt;?php echo lang(\'threads\'); ?&gt;\n                            &lt;/span&gt;\n                            &lt;br&gt;\n                            &lt;b&gt;\n                                &lt;?php echo $runtime[\'threads\']; ?&gt;\n                            &lt;/b&gt;\n                        &lt;/td&gt;\n                        &lt;td&gt;\n                            &lt;span class=\"text-muted\"&gt;\n                                &lt;?php echo lang(\'posts\'); ?&gt;\n                            &lt;/span&gt;\n                            &lt;br&gt;\n                            &lt;b&gt;\n                                &lt;?php echo $runtime[\'posts\']; ?&gt;\n                            &lt;/b&gt;\n                        &lt;/td&gt;\n                        &lt;td&gt;\n                            &lt;span class=\"text-muted\"&gt;\n                                &lt;?php echo lang(\'users\'); ?&gt;\n                            &lt;/span&gt;\n                            &lt;br&gt;\n                            &lt;b&gt;\n                                &lt;?php echo $runtime[\'users\']; ?&gt;\n                            &lt;/b&gt;\n                        &lt;/td&gt;\n                        &lt;?php if ($runtime[\'onlines\'] &gt; 0) { ?&gt;\n                        &lt;td&gt;\n                            &lt;span class=\"text-muted\"&gt;\n                                &lt;?php echo lang(\'online\'); ?&gt;\n                            &lt;/span&gt;\n                            &lt;br&gt;\n                            &lt;b&gt;\n                                &lt;?php echo $runtime[\'onlines\']; ?&gt;\n                            &lt;/b&gt;\n                        &lt;/td&gt;\n                        &lt;?php \n                    } ?&gt;\n                    &lt;/tr&gt;\n                &lt;/table&gt;\n            &lt;/div&gt;\n            &lt;!--{hook index_site_brief_end.htm}--&gt;\n        &lt;/div&gt;\n        &lt;!--{hook index_site_brief_after.htm}--&gt;\n    &lt;/div&gt;\n&lt;/div&gt;\n\n\n&lt;?php include _include(APP_PATH . \'view/htm/footer.inc.htm\'); ?&gt;\n\n&lt;script&gt;\n    $(\'li[data-active=\"bbs\"]\').addClass(\'active\');\n&lt;/script&gt;\n\n&lt;!--{hook bbs_js.htm}--&gt;</code></pre>\n<p>效果</p>\n<p><img src=\"/image/20191004182306.jpg\" alt=\"\" width=\"1412\" height=\"705\" /></p>', 1, 5, '2019-10-04 18:24:36', '2019-10-04 18:24:36');
INSERT INTO `article` VALUES (16, 'Xiuno程序帖子列表显示内容摘要', '数字200为要截取的字符数 <div class=\"summary mb-2\">\n<?php \n        $content = post_read_cache($_thread[\'firstpid\'])[\'message_fmt\'];\n        echo xn_substr(strip_tags($content), 0, 200) . \"……\";\n?>\n</div> 通过CSS控制，使得内容在所有尺寸屏幕下最多只显示3行 .summary{\n  color: #5C5C5C;\n  line-height: 1.5rem;\n  max-height: 4.5rem;\n  overf', '<p>数字200为要截取的字符数</p>\r\n<pre class=\"language-php\"><code>&lt;div class=\"summary mb-2\"&gt;\r\n&lt;?php \r\n    $content = post_read_cache($_thread[\'firstpid\'])[\'message_fmt\'];\r\n    echo xn_substr(strip_tags($content), 0, 200) . \"&hellip;&hellip;\";\r\n?&gt;\r\n&lt;/div&gt;</code></pre>\r\n<p>通过CSS控制，使得内容在所有尺寸屏幕下最多只显示3行</p>\r\n<pre class=\"language-css\"><code>.summary{\r\n  color: #5C5C5C;\r\n  line-height: 1.5rem;\r\n  max-height: 4.5rem;\r\n  overflow: hidden;\r\n}</code></pre>', 1, 5, '2019-10-04 20:01:37', '2019-10-04 20:01:37');
INSERT INTO `article` VALUES (17, 'Xiuno程序帖子列表显示缩略图', '<div class=\"thumbs\">\n            <?php \n            $pattern = \"/<[img].*?src=[\\\"](.*?(?:[\\.gif|\\.jpg|\\.png]))[\\\"].*?[\\/]?>/\";\n            $count = preg_match_all($pattern, $content, $match);\n            //显示数量为4\n            $show = min($count, 4);\n            if ($count > 0) {\n                for (', '<pre class=\"language-php\"><code>&lt;div class=\"thumbs\"&gt;\r\n    &lt;?php \r\n    $pattern = \"/&lt;[img].*?src=[\\\"](.*?(?:[\\.gif|\\.jpg|\\.png]))[\\\"].*?[\\/]?&gt;/\";\r\n    $count = preg_match_all($pattern, $content, $match);\r\n    //显示数量为4\r\n    $show = min($count, 4);\r\n    if ($count &gt; 0) {\r\n    for ($i = 0; $i &lt; $show; $i++) {\r\n        $imgs[$i] = $match[1][$i];\r\n        $filename = substr($imgs[$i], 20);\r\n        //缩略图存放路径\r\n        $thumbs[$i] = \'plugin/xxx/img/thumb\' . $filename;\r\n        if (!file_exists($thumbs[$i])) {\r\n            //缩略图尺寸为150x150\r\n           image_clip_thumb($imgs[$i], $thumbs[$i], 150, 150);\r\n        }\r\n    }\r\n    for ($i = 0; $i &lt; $show; $i++) {\r\n        $thumb[$i] = $thumbs[$i];\r\n        ?&gt;\r\n    &lt;img class=\"thumb\" height=\"100%\" width=\"100%\" src=\"&lt;?php echo $thumb[$i] ?&gt;\"&gt;\r\n    &lt;?php  \r\n    } ?&gt;\r\n    &lt;div class=\"count small text-white text-center\"&gt;\r\n    共&amp;nbsp;&lt;?php echo $count; ?&gt;&amp;nbsp;张\r\n    &lt;/div&gt;\r\n    &lt;?php  \r\n    } ?&gt;\r\n&lt;/div&gt;</code></pre>\r\n<p>CSS</p>\r\n<pre class=\"language-css\"><code>@media (max-width: 576px) {\r\n  .thumb {\r\n    width: 48% !important;\r\n  }\r\n}\r\n.thumb {\r\n  margin: 0.125rem 0;\r\n  width: 24%;\r\n  height: 150px;\r\n  border: 1px solid #dee2e6;\r\n}\r\n.thumbs {\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: inline;\r\n}\r\n.count {\r\n  position: absolute;\r\n  bottom: -4rem;\r\n  right: 0.1rem;\r\n  width: 3.5rem;\r\n  background-color: rgba(0, 0, 0, .5);\r\n  border-radius: 2.5rem 0 0 2.5rem;\r\n}</code></pre>', 1, 5, '2019-10-04 20:16:39', '2019-10-04 20:16:39');

-- ----------------------------
-- Table structure for category
-- ----------------------------
DROP TABLE IF EXISTS `category`;
CREATE TABLE `category`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(45) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  `icon` varchar(45) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  `synopsis` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  `sequence` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 33 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of category
-- ----------------------------
INSERT INTO `category` VALUES (1, 'JAVA', '/icon/java.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 1);
INSERT INTO `category` VALUES (2, 'Python', '/icon/python.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 2);
INSERT INTO `category` VALUES (3, 'Golang', '/icon/golang.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 3);
INSERT INTO `category` VALUES (4, 'Android', '/icon/android.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 4);
INSERT INTO `category` VALUES (5, 'PHP', '/icon/php.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 5);
INSERT INTO `category` VALUES (6, 'C++', '/icon/cpp.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 6);
INSERT INTO `category` VALUES (7, 'HTML', '/icon/html.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 7);
INSERT INTO `category` VALUES (8, 'CSS', '/icon/css.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 8);
INSERT INTO `category` VALUES (9, 'JavaScript', '/icon/javascript.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 9);
INSERT INTO `category` VALUES (10, 'Spring', '/icon/spring.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 10);
INSERT INTO `category` VALUES (11, 'Mybatis', '/icon/mybatis.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 11);
INSERT INTO `category` VALUES (12, 'SpringBoot', '/icon/springboot.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 12);
INSERT INTO `category` VALUES (13, 'SpringCloud', '/icon/springcloud.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 13);
INSERT INTO `category` VALUES (14, 'Django', '/icon/django.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 14);
INSERT INTO `category` VALUES (15, 'Laravel', '/icon/laravel.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 15);
INSERT INTO `category` VALUES (16, '小程序', '/icon/miniprogram.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 16);
INSERT INTO `category` VALUES (17, 'ElementUI', '/icon/elementui.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 17);
INSERT INTO `category` VALUES (18, 'Bootstrap', '/icon/bootstrap.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 18);
INSERT INTO `category` VALUES (19, 'Vue', '/icon/vue.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 19);
INSERT INTO `category` VALUES (20, 'Jquery', '/icon/jquery.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 20);
INSERT INTO `category` VALUES (21, 'Nodejs', '/icon/nodejs.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 21);
INSERT INTO `category` VALUES (22, 'Mysql', '/icon/mysql.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 22);
INSERT INTO `category` VALUES (23, 'Oracle', '/icon/oracle.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 23);
INSERT INTO `category` VALUES (24, 'Redis', '/icon/redis.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 24);
INSERT INTO `category` VALUES (25, 'MongoDB', '/icon/mongodb.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 25);
INSERT INTO `category` VALUES (26, 'Windows', '/icon/windows.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 26);
INSERT INTO `category` VALUES (27, 'Linux', '/icon/linux.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 27);
INSERT INTO `category` VALUES (28, 'Apache', '/icon/apache.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 28);
INSERT INTO `category` VALUES (29, 'Nginx', '/icon/nginx.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 29);
INSERT INTO `category` VALUES (30, 'Docker', '/icon/docker.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 30);
INSERT INTO `category` VALUES (31, 'Webpack', '/icon/webpack.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 31);
INSERT INTO `category` VALUES (32, '算法题解', '/icon/algorithm.png', '测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介测试简介', 32);

-- ----------------------------
-- Table structure for comment
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci,
  `user_id` int(11) DEFAULT NULL,
  `article_id` int(11) DEFAULT NULL,
  `create_time` datetime(0) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 8 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of comment
-- ----------------------------
INSERT INTO `comment` VALUES (1, '这是一条测试评论', 1, 11, '2019-07-11 18:36:37');
INSERT INTO `comment` VALUES (2, '这是一条测试评论', 2, 11, '2019-06-14 18:36:39');
INSERT INTO `comment` VALUES (3, '这是一条测试评论', 2, 11, '2019-07-14 18:36:43');
INSERT INTO `comment` VALUES (4, '这是一条测试评论', 2, 11, '2019-07-16 18:36:46');
INSERT INTO `comment` VALUES (5, '这是一条测试评论', 1, 11, '2019-07-07 18:36:48');
INSERT INTO `comment` VALUES (6, '这是一条测试评论', 1, 11, '2019-07-08 18:36:50');
INSERT INTO `comment` VALUES (7, '也是一条测试评论', 1, 11, '2019-07-29 14:24:26');

-- ----------------------------
-- Table structure for role
-- ----------------------------
DROP TABLE IF EXISTS `role`;
CREATE TABLE `role`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(45) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of role
-- ----------------------------
INSERT INTO `role` VALUES (1, 'admin');

-- ----------------------------
-- Table structure for sentence
-- ----------------------------
DROP TABLE IF EXISTS `sentence`;
CREATE TABLE `sentence`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `note` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  `content` varchar(200) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  `create_time` datetime(0) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of sentence
-- ----------------------------
INSERT INTO `sentence` VALUES (1, '人生最大的幸福是坚信有人爱我们。', 'The supreme happiness of life is the conviction that we are loved.', '2019-10-01 04:00:01');
INSERT INTO `sentence` VALUES (2, '友谊既是快乐之源泉，又是健康之要素。', 'Friendship is both a source of pleasure and a component of good health.', '2019-10-02 04:00:00');
INSERT INTO `sentence` VALUES (3, '懒惰就像一把锁，锁住了知识的仓库，使你的智力变得匮乏。', 'Laziness is like a lock, which bolts you out of the storehouse of information and makes you an intellectual starveling.', '2019-10-03 04:00:00');
INSERT INTO `sentence` VALUES (4, '有时候你能做的最紧急重要的事情就是彻底休息。', 'Sometimes the most urgent and vital thing you can possibly do is to take a complete rest.', '2019-10-04 04:00:01');

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  `password` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  `email` varchar(45) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  `avatar` varchar(45) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES (1, 'citru', '$2a$10$en2JxasguDAPugsYRPdHGOTazazkihMqq3gC9yi8a8yBeQhpwFgCu', 'kwxy1314@qq.com', '/img/avatar.jpg');
INSERT INTO `user` VALUES (2, 'wxy', '$2a$10$4SYYq1qaE9ApLuXcuBcaGuv8YlIGyKEyECqQD5lLOUhwEhjNqymuW', 'jdjm@xj.xjd', '/img/avatar.jpg');
INSERT INTO `user` VALUES (3, 'ceshi', '$2a$10$84yQT8MAkSzHzqCMYGC2cOYhGHs2SsQCIhThUhpUORF5DTShSbhSG', 'fafahj@aajkfa.vzv', '/img/avatar.jpg');

-- ----------------------------
-- Table structure for user_role
-- ----------------------------
DROP TABLE IF EXISTS `user_role`;
CREATE TABLE `user_role`  (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` varchar(45) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  `role_id` varchar(45) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user_role
-- ----------------------------
INSERT INTO `user_role` VALUES (1, '1', '1');
INSERT INTO `user_role` VALUES (2, '0', '1');
INSERT INTO `user_role` VALUES (3, '0', '1');

-- ----------------------------
-- Table structure for user_token
-- ----------------------------
DROP TABLE IF EXISTS `user_token`;
CREATE TABLE `user_token`  (
  `username` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `series` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `token` varchar(64) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `last_used` timestamp(0) NOT NULL,
  PRIMARY KEY (`series`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user_token
-- ----------------------------
INSERT INTO `user_token` VALUES ('citru', '+iEqD2YQGfRdj6yJuoqxOw==', 'QB4rE+LQJKFz0WLPHSyc/w==', '2019-10-04 19:16:18');

SET FOREIGN_KEY_CHECKS = 1;
