<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.linter.blog.mapper.CommentMapper">
    <resultMap id="CommentResultMap" type="Comment">
        <id property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="createdTime" column="created_time"/>
        <result property="articleId" column="article_id"/>
        <association property="user" javaType="User">
            <id property="id" column="user_id"/>
            <result property="username" column="username"/>
        </association>
    </resultMap>

    <insert id="insertComment">
        insert into comment(content, user_id, article_id, created_time)
        values (#{content}, #{user.id}, #{articleId}, #{createdTime})
    </insert>

    <update id="updateComment">
        update comment
        set content = #{content}
        where id = #{id}
    </update>

    <delete id="deleteCommentByIds">
        delete from comment
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteCommentByUserIds">
        delete
        from comment
        where user_id in
        <foreach collection="userIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteCommentByCategoryId">
        delete
        from comment
        where article_id in
        (select id from article where category_id = #{categoryId})
    </delete>

    <delete id="deleteCommentByArticleIds">
        delete
        from comment
        where article_id in
        <foreach collection="articleIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectCommentsByArticleId" resultMap="CommentResultMap">
        select comment.id, comment.content, comment.created_time, comment.article_id,
        user.id as user_id, user.username
        from comment, user
        where comment.user_id = user.id
        <if test="articleId != 0">
            and comment.article_id = #{articleId}
        </if>
        order by comment.created_time desc
    </select>

    <select id="countCommentByIds" resultType="Map">
        select article_id, count(*) as comment_count
        from comment
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        group by article_id
    </select>

    <select id="countCommentByUserIds" resultType="Map">
        select article_id, count(*) as comment_count
        from comment
        where user_id in
        <foreach collection="userIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        group by article_id
    </select>
</mapper>